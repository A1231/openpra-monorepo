version: '3.3'

networks:
  db_net:
    driver: overlay
    attachable: true
  backend:
    driver: overlay
    attachable: true
  traefik-public:
    external: true

secrets:
  CI_JWT_SECRET_KEY:
    file: secrets/DSF_JWT_SECRET_KEY.secret

services:
  frontend:
    image: ${IMAGE_FRONTEND}
    networks:
      - traefik-public
      - backend
    deploy:
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.${APP_NAME}-frontend-http.rule=Host(`${HOST_URL?Variable not set}`)
        - traefik.http.routers.${APP_NAME}-frontend-http.entrypoints=http
        - traefik.http.routers.${APP_NAME}-frontend-http.middlewares=https-redirect,gzip
        - traefik.http.routers.${APP_NAME}-frontend-http.service=${APP_NAME}-frontend
        - traefik.http.routers.${APP_NAME}-frontend-https.rule=Host(`${HOST_URL?Variable not set}`)
        - traefik.http.routers.${APP_NAME}-frontend-https.entrypoints=https
        - traefik.http.routers.${APP_NAME}-frontend-https.tls=true
        - traefik.http.routers.${APP_NAME}-frontend-https.tls.certresolver=le
        - traefik.http.routers.${APP_NAME}-frontend-https.middlewares=gzip
        - traefik.http.routers.${APP_NAME}-frontend-https.service=${APP_NAME}-frontend
        - traefik.http.services.${APP_NAME}-frontend.loadbalancer.server.port=80

  backend:
    image: ${IMAGE_BACKEND}
    networks:
      - traefik-public
      - backend
      - db_net
    secrets:
      - CI_JWT_SECRET_KEY
    environment:
      MONGO_URL: mongodb://mongodb:27017
#      JWT_SECRET_KEY: ${DSF_JWT_SECRET_KEY}
      JWT_SECRET_KEY: /run/secrets/CI_JWT_SECRET_KEY
      SENTRY_DSN: ${CI_SENTRY_DSN}
      SENTRY_ENV: ${CI_SENTRY_ENV}
      DEBUG: ${CI_DEBUG}
      DEPLOYMENT: 'true'
    depends_on:
      - mongodb
    deploy:
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.${APP_NAME}-backend-http.rule=Host(`${HOST_URL?Variable not set}`) && PathPrefix(`/api`)
        - traefik.http.routers.${APP_NAME}-backend-http.entrypoints=http
        - traefik.http.routers.${APP_NAME}-backend-http.middlewares=https-redirect,gzip
        - traefik.http.routers.${APP_NAME}-backend-http.service=${APP_NAME}-backend
        - traefik.http.routers.${APP_NAME}-backend-https.rule=Host(`${HOST_URL?Variable not set}`) && PathPrefix(`/api`)
        - traefik.http.routers.${APP_NAME}-backend-https.entrypoints=https
        - traefik.http.routers.${APP_NAME}-backend-https.tls=true
        - traefik.http.routers.${APP_NAME}-backend-https.tls.certresolver=le
        - traefik.http.routers.${APP_NAME}-backend-https.middlewares=gzip
        - traefik.http.routers.${APP_NAME}-backend-https.service=${APP_NAME}-backend
        - traefik.http.services.${APP_NAME}-backend.loadbalancer.server.port=8000

  mongodb-express:
    image: mongo-express:latest
    networks:
      - traefik-public
      - db_net
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_ENABLE_ADMIN: 'true'
      ME_CONFIG_SITE_BASEURL: /mongo/
    depends_on:
      - mongodb
    deploy:
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.${APP_NAME}-express-http.rule=Host(`${HOST_URL?Variable not set}`) && PathPrefix(`/mongo`)
        - traefik.http.routers.${APP_NAME}-express-http.entrypoints=http
        - traefik.http.routers.${APP_NAME}-express-http.middlewares=https-redirect,gzip
        - traefik.http.routers.${APP_NAME}-express-http.service=${APP_NAME}-express
        - traefik.http.routers.${APP_NAME}-express-https.rule=Host(`${HOST_URL?Variable not set}`) && PathPrefix(`/mongo`)
        - traefik.http.routers.${APP_NAME}-express-https.entrypoints=https
        - traefik.http.routers.${APP_NAME}-express-https.tls=true
        - traefik.http.routers.${APP_NAME}-express-https.tls.certresolver=le
        - traefik.http.routers.${APP_NAME}-express-https.middlewares=gzip
        - traefik.http.routers.${APP_NAME}-express-https.service=${APP_NAME}-express
        - traefik.http.services.${APP_NAME}-express.loadbalancer.server.port=8081

  mongodb:
    image: mongo:latest
    networks:
      - db_net
    volumes:
      - "$ENV_SHARED_VOLUME_PATH/mongodb:/data/db"
